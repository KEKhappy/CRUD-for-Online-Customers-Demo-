openapi: 3.0.3
info:
  title: Online customer Open API
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/ver0
paths:
  /customers:
    get:
      tags:
        - customer
      summary: Finds all Customers
      operationId: getAllCustomers
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer'
        '400':
          description: Invalid status value
  /customers/save:
    post:
      tags:
        - customer
      summary: Add a new customer
      operationId: saveCustomer
      parameters:
        - name: customer
          in: query
          description: All information about customer. Email required
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/customer'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '400':
          description: Invalid Customer supplied
        '404':
          description: Customer not found
        '422':
          description: Validation exception
  /customer/update:
    put:
      tags:
        - customer
      summary: Updates customer
      operationId: updateCustomer
      parameters:
        - name: customer
          in: query
          description: All information about customer. Email required
          required: false
          explode: true
          schema:
            type: array
            items:
              type: string
      requestBody:
        description: All information about customer. Some parameters must match the existing ones.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/customer'
          application/xml:
            schema:
              $ref: '#/components/schemas/customer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/customer'
        required: true
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/customer'
        '400':
          description: Invalid customer supplied
        '404':
          description: Customer not found
        '422':
          description: Validation exception
  /customer/{id}:
    get:
      tags:
        - customer
      summary: Find customer by ID
      description: Returns a single customer
      operationId: getCustomerById
      parameters:
        - name: id
          in: path
          description: ID of customer to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/customer'          
            application/xml:
              schema:
                $ref: '#/components/schemas/customer'
        '400':
          description: Invalid ID supplied
        '404':
          description: Customer not found
  /customer/delete/{id}:
    delete:
      tags:
        - customer
      summary: Deletes a customer
      description: delete a customer by ID
      operationId: deleteCustomerById
      parameters:
        - name: id
          in: path
          description: Customer id to delete
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID
components:
  schemas:
    customer:
      required:
        - id
        - email
      type: object
      properties:
        id:
          type: string
          example: 95f483c9-2291-4e71-8e9d-0f8dce514900
        username:
          type: string
          example: KEKsady
        registrationDate:
          type: string
          example: 2019-07-09
        dateOfBirth:
          type: string
          example: 2019-07-09
        gender:
          type: string
          example: male
        email:
          type: string
          example: KEKsady@gmail.com
        lastDataChangeDate:
          type: string
          example: 2019-07-09
        balance:
          type: number
          example: 123.456
      xml:
        name: customer
